snippet log
console.log $1
endsnippet

snippet seti
setInterval ->
	$1
endsnippet

snippet cleari
clearInterval $1
endsnippet


snippet pro
* prototype.$1
endsnippet

snippet @m
* @module $1
endsnippet

snippet @e
* @example $1
endsnippet

snippet @p
* @param {String} $1
endsnippet

snippet @pd
* @param {Object} data
endsnippet

snippet @pd.
* @param {String} data.$1
endsnippet

snippet @ext
* @extends $1
endsnippet


snippet @a
* @alias $1
endsnippet

snippet @c
@constructor $1
endsnippet

snippet doc
###*
 * $1
 * @author vfasky <vfasky@gmail.com>
 * $2
###
endsnippet

snippet cmd
###*
 *
 * $1
 * @author vfasky <vfasky@gmail.com>
###
	
"use strict"


endsnippet


snippet amd
###*
 *
 * @module $1
 * @author vfasky <vfasky@gmail.com>
###
define '$1', ['jquery'], ($)->
	
	"use strict"

endsnippet

snippet re
return
endsnippet

snippet use
"use strict"

endsnippet

snippet req
$1 = require '$1'
endsnippet

snippet self
self = @
endsnippet

snippet sub
$1.subclass
	constructor: $1::constructor
	$2: ->
endsnippet

snippet dtd
dtd = $.Deferred()

dtd.resolve $1

dtd.promise()
endsnippet

snippet exp
module.exports =
endsnippet

snippet $
$ = require 'jquery'
endsnippet

snippet refa
return false
endsnippet

snippet vn
module.exports.viewName = '$1'
endsnippet
